package com.kinghis.yyoauth.controller.api;

import com.alibaba.fastjson.JSON;
import com.kinghis.yyoauth.model.api.DeptModel;
import com.kinghis.yyoauth.model.api.MemberModel;
import com.kinghis.yyoauth.model.api.MessageModel;
import com.kinghis.yyoauth.service.DeptService;
import com.kinghis.yyoauth.service.SysUserService;
import com.wtx.common.util.CommonUtil;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.Map;

/**
 * @DESC:
 * @Author: sl
 * @Date: 2021-11-04 16:31
 */
@RestController
@RequestMapping("/api/message/")
public class MessageController {

    //人员
    private static String THPS_USER = "THPS_USER";

    //科室
    private static String THPS_DEPT = "THPS_DEPT";


    @Autowired
    private SysUserService sysUserService;

    @Autowired
    private DeptService deptService;

    private  static org.slf4j.Logger logger = LoggerFactory.getLogger(MessageController.class);

    /**
    * @Description: 消息接收 接收集成平台推送的消息
    * @Author: sl
    * @Date: 2021-11-04 16:33
    */
    @RequestMapping("receive")
    public Map<String, Object> receive(@RequestBody String msg){
        logger.info("接收到集成平台推送消息：" + msg);
        Map<String, Object> map = new HashMap<>();
        map.put("object", null);
        map.put("statusCode", 0);
        map.put("success", false);
        if (CommonUtil.isEmpty(msg)){
            map.put("message", "入参为空");
            return map;
        }

        MessageModel model = JSON.parseObject(msg, MessageModel.class);
        logger.info("消息类型为：" + model.getTopicConfig().getTopicCode());
        try {
            if (THPS_USER.equals(model.getTopicConfig().getTopicCode())){
                //获取人员信息
                MemberModel member = JSON.parseObject(model.getMessage().getContent(), MemberModel.class);
                //保存人员信息
                saveMemberInfo(member);
                logger.info("保存推送人员变更信息成功：" + JSON.toJSON(member));
            } else if (THPS_DEPT.equals(model.getTopicConfig().getTopicCode())){
                //获取科室信息
                DeptModel dept = JSON.parseObject(model.getMessage().getContent(), DeptModel.class);
                saveDeptInfo(dept);
                logger.info("保存推送科室变更信息成功：" + JSON.toJSON(dept));
            }
            map.put("object", model.getMessage().getMessageId());
            map.put("statusCode", 200);
            map.put("success", true);
            map.put("message", null);
        } catch (Exception e){
            logger.error(e.getMessage());
            e.printStackTrace();
            map.put("message", e.getMessage());
        }
        logger.info("返回集成平台信息：" + JSON.toJSON(map));
        return map;
    }

    private void saveMemberInfo(MemberModel member){
        sysUserService.saveApiUser(member);
    }

    private void saveDeptInfo(DeptModel dept){
        deptService.saveApiDept(dept);
    }
}
